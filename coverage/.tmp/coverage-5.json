{"/Users/linus/Documents/GitHub/Enhet-integration-testning/src/App.tsx":{"path":"/Users/linus/Documents/GitHub/Enhet-integration-testning/src/App.tsx","statementMap":{"0":{"start":{"line":4,"column":44},"end":{"line":4,"column":76}},"1":{"start":{"line":5,"column":38},"end":{"line":5,"column":50}},"2":{"start":{"line":6,"column":34},"end":{"line":6,"column":46}},"3":{"start":{"line":8,"column":8},"end":{"line":8,"column":50}},"4":{"start":{"line":10,"column":24},"end":{"line":19,"column":5}},"5":{"start":{"line":11,"column":22},"end":{"line":11,"column":45}},"6":{"start":{"line":12,"column":8},"end":{"line":17,"column":9}},"7":{"start":{"line":13,"column":12},"end":{"line":13,"column":52}},"8":{"start":{"line":14,"column":12},"end":{"line":14,"column":52}},"9":{"start":{"line":16,"column":12},"end":{"line":16,"column":53}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":25}},"11":{"start":{"line":20,"column":4},"end":{"line":71,"column":13}},"12":{"start":{"line":43,"column":31},"end":{"line":43,"column":59}}},"fnMap":{"0":{"name":"App","decl":{"start":{"line":3,"column":9},"end":{"line":3,"column":12}},"loc":{"start":{"line":3,"column":15},"end":{"line":72,"column":1}},"line":3},"1":{"name":"generateRandomNumber","decl":{"start":{"line":7,"column":13},"end":{"line":7,"column":33}},"loc":{"start":{"line":7,"column":36},"end":{"line":9,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":10,"column":24},"end":{"line":10,"column":25}},"loc":{"start":{"line":10,"column":28},"end":{"line":19,"column":5}},"line":10},"3":{"name":"(anonymous_3)","decl":{"start":{"line":43,"column":26},"end":{"line":43,"column":27}},"loc":{"start":{"line":43,"column":31},"end":{"line":43,"column":59}},"line":43}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":8},"end":{"line":17,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":17,"column":9}},{"start":{"line":15,"column":15},"end":{"line":17,"column":9}}],"line":12},"1":{"loc":{"start":{"line":59,"column":12},"end":{"line":65,"column":20}},"type":"binary-expr","locations":[{"start":{"line":59,"column":12},"end":{"line":59,"column":19}},{"start":{"line":59,"column":37},"end":{"line":65,"column":20}}],"line":59}},"s":{"0":3,"1":3,"2":3,"3":3,"4":3,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":3,"12":0},"f":{"0":3,"1":3,"2":0,"3":0},"b":{"0":[0,0],"1":[3,0]},"inputSourceMap":{"version":3,"sources":["/Users/linus/Documents/GitHub/Enhet-integration-testning/src/App.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nfunction App() {\n    const [randomNumber, setRandomNumber] = useState(generateRandomNumber());\n    const [userGuess, setUserGuess] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n\n    function generateRandomNumber() {\n        return Math.floor(Math.random() * 10) + 1;\n    }\n\n    const handleGuess = () => {\n        const guess = parseInt(userGuess, 10);\n        if (guess === randomNumber) {\n            setMessage(\"Grattis! Du gissade rätt!\");\n            setRandomNumber(generateRandomNumber());\n        } else {\n            setMessage(\"Fel gissning. Försök igen!\");\n        }\n        setUserGuess(\"\");\n    };\n\n    return (\n        <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n            <h1>Gissa numret</h1>\n            <p>Gissa ett nummer mellan 1 och 10</p>\n            <input type=\"number\" value={userGuess} onChange={(e) => setUserGuess(e.target.value)} min=\"1\" max=\"10\" />\n            <button onClick={handleGuess}>Gissa</button>\n            {message && <p>{message}</p>}\n        </div>\n    );\n}\n\nexport default App;\n"],"names":["useState","App","randomNumber","setRandomNumber","generateRandomNumber","userGuess","setUserGuess","message","setMessage","Math","floor","random","handleGuess","guess","parseInt","div","style","textAlign","marginTop","h1","p","input","type","value","onChange","e","target","min","max","button","onClick"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,QAAQ;AAEjC,SAASC;IACL,MAAM,CAACC,cAAcC,gBAAgB,GAAGH,SAASI;IACjD,MAAM,CAACC,WAAWC,aAAa,GAAGN,SAAS;IAC3C,MAAM,CAACO,SAASC,WAAW,GAAGR,SAAS;IAEvC,SAASI;QACL,OAAOK,KAAKC,KAAK,CAACD,KAAKE,MAAM,KAAK,MAAM;IAC5C;IAEA,MAAMC,cAAc;QAChB,MAAMC,QAAQC,SAAST,WAAW;QAClC,IAAIQ,UAAUX,cAAc;YACxBM,WAAW;YACXL,gBAAgBC;QACpB,OAAO;YACHI,WAAW;QACf;QACAF,aAAa;IACjB;IAEA,qBACI,QAACS;QAAIC,OAAO;YAAEC,WAAW;YAAUC,WAAW;QAAO;;0BACjD,QAACC;0BAAG;;;;;;0BACJ,QAACC;0BAAE;;;;;;0BACH,QAACC;gBAAMC,MAAK;gBAASC,OAAOlB;gBAAWmB,UAAU,CAACC,IAAMnB,aAAamB,EAAEC,MAAM,CAACH,KAAK;gBAAGI,KAAI;gBAAIC,KAAI;;;;;;0BAClG,QAACC;gBAAOC,SAASlB;0BAAa;;;;;;YAC7BL,yBAAW,QAACa;0BAAGb;;;;;;;;;;;;AAG5B;AAEA,eAAeN,IAAI"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8fc6ad0da1de557689813b9952b88c5a976075b3"}}